---
# Moved this here because if jenkins signing key becomes outdated, it affects the apt package update
- name: download jenkins, terraform & kubernetes keys
  apt_key: 
   url: "{{ item }}"
   state: present
  loop:
    - https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    - https://apt.releases.hashicorp.com/gpg

- name: add jenkins, kubernetes, terraform repositories
  apt_repository: 
   repo: "{{ item }}"
   state: present
  loop:
    - "deb https://pkg.jenkins.io/debian-stable binary/"
    - "deb https://apt.releases.hashicorp.com/ focal  main"



# Install and Configure these softwares on CI server for Containerization in Pipeline
- name: install java 17 and other packages
  ansible.builtin.apt:
   name: "{{ item }}"
   state: present
   update_cache: yes
  loop: 
    - fontconfig
    - openjdk-17-jre
    - jq
    - docker.io
    - unzip
    - docker-compose

- name: Update ubuntu
  ansible.builtin.apt:
   update_cache: yes

- name: install the following packages using apt_get
  ansible.builtin.apt: 
   name: "{{ item }}"
   state: present
   update_cache: yes
   force_apt_get: yes
  loop:
    - jenkins
    - curl
    - zip
    - ca-certificates
    - apt-transport-https


- name: start and enable jenkins
  ansible.builtin.service:
   name: jenkins
   state: started
   enabled: true
   daemon_reload: yes
  notify: Restart jenkins server


# #  install php and its extensions
# - name: Add PHP repository for PHP 8.2 (Ubuntu/Debian)
#   apt_repository:
#     repo: ppa:ondrej/php
      
# - name: Install  php and its extensions
#   ansible.builtin.apt:
#     name: "{{ item }}"
#     update_cache: true
#     force_apt_get: yes
#     state: present
#   loop:
#       - php8.2
#       - php8.2-cli
#       - php8.2-fpm
#       - php8.2-mysql
#       - php8.2-curl
#       - php8.2-gd
#       - php8.2-mbstring
#       - php8.2-xml
#       - php8.2-zip 

# - name: Download Composer installer
#   ansible.builtin.get_url:
#     url: https://getcomposer.org/installer
#     dest: /tmp/composer-installer.php

# - name: Run Composer installer
#   shell: |
#     php /tmp/composer-installer.php -- --install-dir=/usr/local/bin --filename=composer
#   args:
#     creates: /usr/local/bin/composer


- name: install python3 packages
  ansible.builtin.apt:
    name: 
      - python3
      - python3-pip
      - python3-dev
      - libpq-dev
    update_cache: true
    state: present

- name: Install setuptools
  pip:
    name: setuptools
    extra_args: --upgrade

- name: upgrade pip command
  pip:
    name: pip
    extra_args: --upgrade


- name: install boto3 & botocore
  pip:
    name:  
      - botocore
      - boto3
    executable: pip3

# - name: Add an Apt signing key for MongoDB
#   ansible.builtin.apt_key:
#     url: https://pgp.mongodb.com/server-7.0.asc
#     state: present

# - name: Create List file for MongoDB
#   shell: |
#    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
#   args:
#    chdir: "$HOME"
#    creates: $HOME/filemongodb

# - name: Install Database clients
#   ansible.builtin.apt:
#     name: "{{ item }}"
#     update_cache: true
#     force_apt_get: yes
#     state: present
#   loop:
#       - "mongodb-org"
#       - "mysql-server"

# - name: Enable the database services
#   ansible.builtin.service:
#     name: "{{ item }}"
#     enabled: yes
#     state: started
#   loop:
#     - "mongod"
#     - "mysql"
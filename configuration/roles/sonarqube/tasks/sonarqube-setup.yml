- name: Ensure group sonar exists
  ansible.builtin.group:
    name: sonar
    state: present

- name: install necessary packages
  ansible.builtin.apt:
    name:
      - unzip
      - wget

- name: download the zip file
  ansible.builtin.get_url:
    url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.4.87374.zip
    dest: /opt/
    mode: 0755
    timeout: 300

- name: Create /opt/sonarqube/
  ansible.builtin.file:
    path: /opt/sonarqube/
    state: directory
    mode: '0755'

- name: Extract the zip file
  ansible.builtin.unarchive:
    src: /opt/sonarqube-9.9.4.87374.zip
    dest: /opt/
    remote_src: yes

- name: Copy /opt/sonarqube/
  ansible.builtin.copy:
    src: /opt/sonarqube-9.9.4.87374/
    dest: /opt/sonarqube/
    remote_src: yes
    follow: yes

# - name: remove the zip file
#   ansible.builtin.file:
#     path: /opt/sonarqube-9.9.4.87374.zip
#     state: absent

# - name: add user to run sonar
#   shell: >
#    useradd -c "user to run SonarQube" -d /opt/sonarqube -g sonar sonar
#   args:
#    creates: sonar-user.txt

- name: Add user to run sonar
  ansible.builtin.user:
    home: /opt/sonarqube
    name: sonar
    comment: "user to run sonarqube"
    group: sonar
 
# - name: change ownership
#   shell: >
#    chown sonar:sonar /opt/sonarqube -R
#   args:
#    creates: sonar-owner.txt

- name: Change file ownership
  ansible.builtin.file:
    path: /opt/sonarqube
    recurse: yes
    owner: sonar
    group: sonar
  
- name: Configuring the SonarQube Server
  ansible.builtin.template:
    src: templates/sonar.properties.j2
    dest: /opt/sonarqube/conf/sonar.properties
    force: yes

- name: Update user in sonar.sh file
  ansible.builtin.lineinfile:
    path: /opt/sonarqube/bin/linux-x86-64/sonar.sh
    regexp: '^#RUN_AS_USER='
    state: present
    line: RUN_AS_USER=sonar


- name: create a service file
  ansible.builtin.template:
    src: templates/sonarqube.service.j2
    dest:  /etc/systemd/system/sonar.service
    force: yes

- name: re-execute sonarqube server daemon
  systemd:
    daemon_reload: yes
    #daemon_reexec: yes

- name: start and enable sonarqube
  ansible.builtin.service:
    name: sonar
    state: started
    enabled: yes
  notify: Reload Sonarqube server daemon
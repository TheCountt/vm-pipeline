---
# tasks file for nfs

- name: Create directory for NFS data
  file:
    path: "{{ path_export }}"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Change ownership of folder
  file:
    path: "{{ path_export }}"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '775'
    recurse: yes
    state: directory


- name: Install nfs, aptitude and unzip packages on Ubuntu
  apt:
    name: ['nfs-kernel-server', 'aptitude', 'unzip']
    update_cache: yes
    cache_valid_time: 3600


- name: Start and Enable nfs server
  ansible.builtin.service:
    name: nfs-server
    enabled: yes
    state: started


- name: Upload config file
  ansible.builtin.template:
    src: "templates/exports.j2"
    dest: /etc/exports

- name: Export directory
  shell: |
    exportfs -a
  notify: restart nfs

- import_tasks: dependencies.yml

- name: List codebases from S3 bucket
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: "{{ s3_bucket }}"
    mode: list 
  register: s3_object_result

- name: Ensure the destination directories exist
  file:
    path: "/var/www/{{ item.dest }}"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '775'
    state: directory
  loop: "{{ s3_objects }}"

- name: Download codebases from S3 bucket
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: "{{ s3_bucket }}"
    object: fms/{{ item.src }}
    dest: /var/www/{{ item.src }}
    mode: get
  loop: "{{ s3_objects }}"
  register: s3_download_result


- name: Display download result
  debug:
    msg: "{{ s3_download_result.msg }}" 
  when: s3_download_result.changed


- name: Extract artifacts downloaded from S3 bucket
  unarchive:
    src: /var/www/{{ item.src }}
    dest: "/var/www/{{ item.src | regex_replace('\\.zip$', '') }}"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '775'
    remote_src: yes
  loop: "{{ s3_objects }}"


- name: Delete downloaded zip files
  file:
    path: /var/www/{{ item }}
    state: absent
  with_items:
    - fms-fuel-service.zip
    - fms-frontend.zip
    - fms-vehicle-service.zip
    - fms-api-gateway.zip
    - fms-auth-user-management.zip
    - fms-notification-service.zip
    - fms-payment-service.zip
